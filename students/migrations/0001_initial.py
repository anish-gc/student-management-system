# Generated by Django 5.2.5 on 2025-08-30 09:25

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Status to check if the entity is active')),
                ('remarks', models.CharField(blank=True, max_length=300, null=True)),
                ('name', models.CharField(max_length=200)),
                ('course_code', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z]{2,4}\\d{3,4}$', 'Course code must be in format CS101 or MATH1001')])),
                ('description', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'courses',
                'ordering': ['course_code'],
            },
        ),
        migrations.CreateModel(
            name='MetaData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Status to check if the entity is active')),
                ('remarks', models.CharField(blank=True, max_length=300, null=True)),
                ('key', models.CharField(db_index=True, max_length=100)),
                ('value', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Metadata',
                'verbose_name_plural': 'Metadata',
                'db_table': 'metadata',
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Status to check if the entity is active')),
                ('remarks', models.CharField(blank=True, max_length=300, null=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('courses', models.ManyToManyField(blank=True, related_name='instructors', to='students.course')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('metadata', models.ManyToManyField(blank=True, related_name='instructors', to='students.metadata')),
            ],
            options={
                'db_table': 'instructors',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.AddField(
            model_name='course',
            name='metadata',
            field=models.ManyToManyField(blank=True, related_name='courses', to='students.metadata'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Status to check if the entity is active')),
                ('remarks', models.CharField(blank=True, max_length=300, null=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('date_of_birth', models.DateField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('metadata', models.ManyToManyField(blank=True, related_name='students', to='students.metadata')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'students',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Status to check if the entity is active')),
                ('remarks', models.CharField(blank=True, max_length=300, null=True)),
                ('grade', models.CharField(blank=True, choices=[('A+', 'A+'), ('A', 'A'), ('A-', 'A-'), ('B+', 'B+'), ('B', 'B'), ('B-', 'B-'), ('C+', 'C+'), ('C', 'C'), ('C-', 'C-'), ('D+', 'D+'), ('D', 'D'), ('F', 'F'), ('I', 'Incomplete'), ('W', 'Withdrawn')], max_length=2)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='students.course')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('metadata', models.ManyToManyField(blank=True, related_name='enrollments', to='students.metadata')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='students.student')),
            ],
            options={
                'db_table': 'enrollments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='metadata',
            index=models.Index(fields=['key'], name='metadata_key_c3defb_idx'),
        ),
        migrations.AddIndex(
            model_name='metadata',
            index=models.Index(fields=['created_at'], name='metadata_created_0de3d4_idx'),
        ),
        migrations.AddIndex(
            model_name='instructor',
            index=models.Index(fields=['email'], name='instructors_email_eaf39b_idx'),
        ),
        migrations.AddIndex(
            model_name='instructor',
            index=models.Index(fields=['last_name', 'first_name'], name='instructors_last_na_5e0dc3_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['course_code'], name='courses_course__5da9ef_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['name'], name='courses_name_dcd600_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['email'], name='students_email_b942ac_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['last_name', 'first_name'], name='students_last_na_08ef26_idx'),
        ),
        migrations.AddIndex(
            model_name='enrollment',
            index=models.Index(fields=['student', 'course'], name='enrollments_student_9c8d9e_idx'),
        ),
        migrations.AddConstraint(
            model_name='enrollment',
            constraint=models.UniqueConstraint(fields=('student', 'course'), name='unique_student_course_enrollment'),
        ),
    ]
